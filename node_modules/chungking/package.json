{
  "name": "chungking",
  "description": "Controllers for Node.js and Express.",
  "version": "0.0.6",
  "main": "./lib/index",
  "dependencies": {
    "express": ""
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/olalonde/chungking.git"
  },
  "author": {
    "name": "Olivier Lalonde",
    "email": "olalonde@gmail.com",
    "url": "http://www.syskall.com"
  },
  "readme": "# Chungking \n\nController for Connect and Express (Node.js / Express.js /\nConnect.js). Name comes from [Chungking Express](http://en.wikipedia.org/wiki/Chungking_Express).\n\n## Install\n\n    npm install chungking\n\n## Usage\n\nSet up a Users controller\n\n```javascript\n// users.js\nvar BaseController = require('chungking').BaseController;\n\nvar Users = BaseController.extend(function() {\n  // this === Users.prototype\n\n  // Before filters are called whenever you call an action.\n  // They are asynchronous so you need to call this.next()\n  // when you are done.\n  this.beforeFilter(function() {\n    console.log('This is called before any action is called.');\n    if(this.authenticate())\n      this.next();\n    else\n      this.res.send('Not authorized');\n  });\n  \n  // You can also add methods that are available to all your\n  // actions.\n  this.authenticate = function() {\n    console.log('You can put some authentication code here.');\n    return true;\n  }\n\n  // Add actions below\n  this.action('index', function() {\n    // this.req, this.res, this.next are available anywhere in\n    // your controller.\n    this.res.send('Users index.');\n  });\n\n});\n\nmodule.exports = Users;\n```\n\nCall the controller from your request handler:\n\n```javascript\n// app.js\nvar Users = require('./users');\n\n// ...\n\napp.get('/users', function(req, res, next) {\n  var ctl = new Users(req, res, next);\n  ctl.action('index');\n});\n```\n\nThat's it!\n\n### Restricting beforeFilters to only specific actions\n\n```javascript\nthis.authorize = function() {\n  console.log('This is called before any action is called.');\n  //authentication code here...\n}\n\n// restrict to only some actions\nthis.beforeFilter({only: ['edit', 'update', 'create']}, function() {\n  this.authorize();\n});\n\n// execute for all actions except listed actions\nthis.beforeFilter({except: ['show']}, function() {\n  this.authorize();\n});\n```\n\n### Tired of writing this.req, this.res and this.next?\n\nYou can optionally get them as params to your beforeFilters and actions.\n\n```javascript\nthis.beforeFilter(function(req, res, next) {\n  res.send('aaahhh much better :)');\n});\n```\n\n### Extending controllers\n\nYou can also extend controllers.\n\nApplication controller:\n\n```javascript\n// application.js\nvar BaseController = require('chungking').BaseController;\n\nvar Application = BaseController.extend(function() {\n  // This before filter will be called whenever a controller that\n  // extends Application gets an action called.\n  this.beforeFilter(function() {\n    if(!this.req.user) this.res.send('Unauthorized!');\n    else this.next();\n  });\n\n  // Set up some useful aliases\n  this.beforeFilter(function() {\n    this.currentSection = 'Application';\n  });\n\n  // This action will be available to any controller that extends\n  // the Application controller.\n  this.action('whoami', function() {\n    this.res.send(this.req.user);\n  });\n});\n\nmodule.exports = Application;\n```\n\nUsers controller which extends the Application controller:\n\n```javascript\n// users.js\nvar Application = require('./application');\n\nvar Users = Application.extend(function() {\n  this.beforeFilter(function() {\n    console.log('This will be called after the Application'\n      + 'controller\\'s before filters.');\n    this.next();\n  });\n  \n  this.action('index', function() {\n    this.res.send('We are in the section ' + this.currentSection);\n  });\n});\n```\n\n# TODO\n\nRethink how inheritance works. Maybe child controllers should not\ninherit before filters and actions.\n\nRefactor the way inheritance is done. Maybe use utils.inherit from\nnode.js http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor.\n",
  "_id": "chungking@0.0.6",
  "_from": "chungking"
}
